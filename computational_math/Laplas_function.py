import numpy as np

from computational_math.utils import bin_search

__x_vec = np.linspace(0, 4.99, 500) # [0, 0.01, 0.02, ... , 4.98, 4.99]
__y_vec = np.array([
    0,
    0.0039894,
    0.0079783,
    0.0119665,
    0.0159534,
    0.0199388,
    0.0239222,
    0.0279032,
    0.0318814,
    0.0358564,
    0.0398278,
    0.0437953,
    0.0477584,
    0.0517168,
    0.0556700,
    0.0596177,
    0.0635595,
    0.0674949,
    0.0714237,
    0.0753454,
    0.0792597,
    0.0831662,
    0.0870644,
    0.0909541,
    0.0948349,
    0.0987063,
    0.1025681,
    0.1064199,
    0.1102612,
    0.1140919,
    0.1179114,
    0.1217195,
    0.1255158,
    0.1293000,
    0.1330717,
    0.1368307,
    0.1405764,
    0.1443088,
    0.1480273,
    0.1517317,
    0.1554217,
    0.1590970,
    0.1627573,
    0.1664022,
    0.1700314,
    0.1736448,
    0.1772419,
    0.1808225,
    0.1843863,
    0.1879331,
    0.1914625,
    0.1949743,
    0.1984682,
    0.2019440,
    0.2054015,
    0.2088403,
    0.2122603,
    0.2156612,
    0.2190427,
    0.2224047,
    0.2257469,
    0.2290691,
    0.2323711,
    0.2356527,
    0.2389137,
    0.2421539,
    0.2453731,
    0.2485711,
    0.2517478,
    0.2549029,
    0.2580363,
    0.2611479,
    0.2642375,
    0.2673049,
    0.2703500,
    0.2733726,
    0.2763727,
    0.2793501,
    0.2823046,
    0.2852361,
    0.2881446,
    0.2910299,
    0.2938919,
    0.2967306,
    0.2995458,
    0.3023375,
    0.3051055,
    0.3078498,
    0.3105703,
    0.3132671,
    0.3159399,
    0.3185887,
    0.3212136,
    0.3238145,
    0.3263912,
    0.3289439,
    0.3314724,
    0.3339768,
    0.3364569,
    0.3389129,
    0.3413447,
    0.3437524,
    0.3461358,
    0.3484950,
    0.3508300,
    0.3531409,
    0.3554277,
    0.3576903,
    0.3599289,
    0.3621434,
    0.3643339,
    0.3665005,
    0.3686431,
    0.3707619,
    0.3728568,
    0.3749281,
    0.3769756,
    0.3789995,
    0.3809999,
    0.3829768,
    0.3849303,
    0.3868606,
    0.3887676,
    0.3906514,
    0.3925123,
    0.3943502,
    0.3961653,
    0.3979577,
    0.3997274,
    0.4014747,
    0.4031995,
    0.4049021,
    0.4065825,
    0.4082409,
    0.4098773,
    0.4114920,
    0.4130850,
    0.4146565,
    0.4162067,
    0.4177356,
    0.4192433,
    0.4207302,
    0.4221962,
    0.4236415,
    0.4250663,
    0.4264707,
    0.4278550,
    0.4292191,
    0.4305634,
    0.4318879,
    0.4331928,
    0.4344783,
    0.4357445,
    0.4369916,
    0.4382198,
    0.4394292,
    0.4406201,
    0.4417924,
    0.4429466,
    0.4440826,
    0.4452007,
    0.4463011,
    0.4473839,
    0.4484493,
    0.4494974,
    0.4505285,
    0.4515428,
    0.4525403,
    0.4535213,
    0.4544860,
    0.4554345,
    0.4563671,
    0.4572838,
    0.4581849,
    0.4590705,
    0.4599408,
    0.4607961,
    0.4616364,
    0.4624620,
    0.4632730,
    0.4640697,
    0.4648521,
    0.4656205,
    0.4663750,
    0.4671159,
    0.4678432,
    0.4685572,
    0.4692581,
    0.4699460,
    0.4706210,
    0.4712834,
    0.4719334,
    0.4725711,
    0.4731966,
    0.4738102,
    0.4744119,
    0.4750021,
    0.4755808,
    0.4761482,
    0.4767045,
    0.4772499,
    0.4777844,
    0.4783083,
    0.4788217,
    0.4793248,
    0.4798178,
    0.4803007,
    0.4807738,
    0.4812372,
    0.4816911,
    0.4821356,
    0.4825708,
    0.4829970,
    0.4834142,
    0.4838226,
    0.4842224,
    0.4846137,
    0.4849966,
    0.4853713,
    0.4857379,
    0.4860966,
    0.4864474,
    0.4867906,
    0.4871263,
    0.4874545,
    0.4877755,
    0.4880894,
    0.4883962,
    0.4886962,
    0.4889893,
    0.4892759,
    0.4895559,
    0.4898296,
    0.4900969,
    0.4903581,
    0.4906133,
    0.4908625,
    0.4911060,
    0.4913437,
    0.4915758,
    0.4918025,
    0.4920237,
    0.4922397,
    0.4924506,
    0.4926564,
    0.4928572,
    0.4930531,
    0.4932443,
    0.4934309,
    0.4936128,
    0.4937903,
    0.4939634,
    0.4941323,
    0.4942969,
    0.4944574,
    0.4946139,
    0.4947664,
    0.4949151,
    0.4950600,
    0.4952012,
    0.4953388,
    0.4954729,
    0.4956035,
    0.4957308,
    0.4958547,
    0.4959754,
    0.4960930,
    0.4962074,
    0.4963189,
    0.4964274,
    0.4965330,
    0.4966358,
    0.4967359,
    0.4968333,
    0.4969280,
    0.4970202,
    0.4971099,
    0.4971972,
    0.4972821,
    0.4973646,
    0.4974449,
    0.4975229,
    0.4975988,
    0.4976726,
    0.4977443,
    0.4978140,
    0.4978818,
    0.4979476,
    0.4980116,
    0.4980738,
    0.4981342,
    0.4981929,
    0.4982498,
    0.4983052,
    0.4983589,
    0.4984111,
    0.4984618,
    0.4985110,
    0.4985588,
    0.4986051,
    0.4986501,
    0.4986938,
    0.4987361,
    0.4987772,
    0.4988171,
    0.4988558,
    0.4988933,
    0.4989297,
    0.4989650,
    0.4989992,
    0.4990324,
    0.4990646,
    0.4990957,
    0.4991260,
    0.4991553,
    0.4991836,
    0.4992112,
    0.4992378,
    0.4992636,
    0.4992886,
    0.4993129,
    0.4993363,
    0.4993590,
    0.4993810,
    0.4994024,
    0.4994230,
    0.4994429,
    0.4994623,
    0.4994810,
    0.4994991,
    0.4995166,
    0.4995335,
    0.4995499,
    0.4995658,
    0.4995811,
    0.4995959,
    0.4996103,
    0.4996242,
    0.4996376,
    0.4996505,
    0.4996631,
    0.4996752,
    0.4996869,
    0.4996982,
    0.4997091,
    0.4997197,
    0.4997299,
    0.4997398,
    0.4997493,
    0.4997585,
    0.4997674,
    0.4997759,
    0.4997842,
    0.4997922,
    0.4997999,
    0.4998074,
    0.4998146,
    0.4998215,
    0.4998282,
    0.4998347,
    0.4998409,
    0.4998469,
    0.4998527,
    0.4998583,
    0.4998637,
    0.4998689,
    0.4998739,
    0.4998787,
    0.4998834,
    0.4998879,
    0.4998922,
    0.4998964,
    0.4999004,
    0.4999043,
    0.4999080,
    0.4999116,
    0.4999150,
    0.4999184,
    0.4999216,
    0.4999247,
    0.4999277,
    0.4999305,
    0.4999333,
    0.4999359,
    0.4999385,
    0.4999409,
    0.4999433,
    0.4999456,
    0.4999478,
    0.4999499,
    0.4999519,
    0.4999539,
    0.4999557,
    0.4999575,
    0.4999593,
    0.4999609,
    0.4999625,
    0.4999641,
    0.4999655,
    0.4999670,
    0.4999683,
    0.4999696,
    0.4999709,
    0.4999721,
    0.4999733,
    0.4999744,
    0.4999755,
    0.4999765,
    0.4999775,
    0.4999784,
    0.4999793,
    0.4999802,
    0.4999811,
    0.4999819,
    0.4999826,
    0.4999834,
    0.4999841,
    0.4999848,
    0.4999854,
    0.4999861,
    0.4999867,
    0.4999872,
    0.4999878,
    0.4999883,
    0.4999888,
    0.4999893,
    0.4999898,
    0.4999902,
    0.4999907,
    0.4999911,
    0.4999915,
    0.4999918,
    0.4999922,
    0.4999925,
    0.4999929,
    0.4999932,
    0.4999935,
    0.4999938,
    0.4999941,
    0.4999943,
    0.4999946,
    0.4999948,
    0.4999951,
    0.4999953,
    0.4999955,
    0.4999957,
    0.4999959,
    0.4999961,
    0.4999963,
    0.4999964,
    0.4999966,
    0.4999968,
    0.4999969,
    0.4999971,
    0.4999972,
    0.4999973,
    0.4999974,
    0.4999976,
    0.4999977,
    0.4999978,
    0.4999979,
    0.4999980,
    0.4999981,
    0.4999982,
    0.4999983,
    0.4999983,
    0.4999984,
    0.4999985,
    0.4999986,
    0.4999986,
    0.4999987,
    0.4999988,
    0.4999988,
    0.4999989,
    0.4999989,
    0.4999990,
    0.4999990,
    0.4999991,
    0.4999991,
    0.4999992,
    0.4999992,
    0.4999992,
    0.4999993,
    0.4999993,
    0.4999994,
    0.4999994,
    0.4999994,
    0.4999994,
    0.4999995,
    0.4999995,
    0.4999995,
    0.4999995,
    0.4999996,
    0.4999996,
    0.4999996,
    0.4999996,
    0.4999996,
    0.4999997,
    0.4999997,
    0.4999997,
])

def Laplas(x):
    '''F(x) = 2/sqrt(2*Pi) * integral_(0, x)_(e^(-(t^2)/2) dt)'''
    i = bin_search(x, __x_vec)
    return __y_vec[i] * 2

def inv_Laplas(y):
    '''F^(-1)(y)'''
    i = bin_search(y/2, __y_vec)
    return __x_vec[i]
